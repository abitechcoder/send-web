import { Link as RouterLink } from "react-router-dom";
import { ReactNode } from "react";
// import { Link } from "../constants";
// import {IconWrapper} from "./"

// interface LinksProps {
//   links: Link[];
// }

export interface Link {
  id: number;
  text: string;
  icon?: ReactNode;
  url: string;
}

const DashboardIcon = ({ className }: any) => {
  return (
    <svg
      width="25"
      height="25"
      viewBox="0 0 25 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      {/* <path
        d="M20.755 26.5301H7.24498C4.04831 26.5301 1.45831 23.9284 1.45831 20.7317V12.0867C1.45831 10.5001 2.43831 8.50508 3.69831 7.52508L9.98665 2.62508C11.8766 1.15508 14.8983 1.08508 16.8583 2.46175L24.0683 7.51341C25.4566 8.48175 26.5416 10.5584 26.5416 12.2501V20.7434C26.5416 23.9284 23.9516 26.5301 20.755 26.5301ZM11.06 4.00175L4.77165 8.90175C3.94331 9.55508 3.20831 11.0367 3.20831 12.0867V20.7317C3.20831 22.9601 5.01665 24.7801 7.24498 24.7801H20.755C22.9833 24.7801 24.7916 22.9717 24.7916 20.7434V12.2501C24.7916 11.1301 23.9866 9.57841 23.065 8.94841L15.855 3.89675C14.525 2.96341 12.3316 3.01008 11.06 4.00175Z"
        fill="#849299"
      />
      <path
        d="M15.75 21.875H12.25C9.835 21.875 7.875 19.915 7.875 17.5V14C7.875 11.585 9.835 9.625 12.25 9.625H15.75C18.165 9.625 20.125 11.585 20.125 14V17.5C20.125 19.915 18.165 21.875 15.75 21.875ZM12.25 11.375C10.8033 11.375 9.625 12.5533 9.625 14V17.5C9.625 18.9467 10.8033 20.125 12.25 20.125H15.75C17.1967 20.125 18.375 18.9467 18.375 17.5V14C18.375 12.5533 17.1967 11.375 15.75 11.375H12.25Z"
        fill="#849299"
      />
      <path
        d="M14 21.875C13.5217 21.875 13.125 21.4783 13.125 21V10.5C13.125 10.0217 13.5217 9.625 14 9.625C14.4783 9.625 14.875 10.0217 14.875 10.5V21C14.875 21.4783 14.4783 21.875 14 21.875Z"
        fill="#849299"
      />
      <path
        d="M19.25 16.625H8.75C8.27167 16.625 7.875 16.2283 7.875 15.75C7.875 15.2717 8.27167 14.875 8.75 14.875H19.25C19.7283 14.875 20.125 15.2717 20.125 15.75C20.125 16.2283 19.7283 16.625 19.25 16.625Z"
        fill="#849299"
      /> */}
      {/* <path
        d="M14.8432 20.3118V15.6242C14.8432 15.417 14.7609 15.2183 14.6144 15.0718C14.4678 14.9252 14.2691 14.8429 14.0619 14.8429H10.9369C10.7297 14.8429 10.531 14.9252 10.3845 15.0718C10.238 15.2183 10.1557 15.417 10.1557 15.6242V20.3118C10.1557 20.519 10.0734 20.7177 9.92689 20.8642C9.7804 21.0107 9.58171 21.093 9.37453 21.093L4.6876 21.0936C4.58499 21.0937 4.48339 21.0735 4.3886 21.0342C4.2938 20.9949 4.20766 20.9374 4.13511 20.8649C4.06255 20.7923 4.005 20.7062 3.96573 20.6114C3.92646 20.5166 3.90625 20.415 3.90625 20.3124V11.2831C3.90625 11.1742 3.92899 11.0666 3.97302 10.967C4.01705 10.8675 4.08139 10.7782 4.16192 10.705L11.9739 3.60202C12.1177 3.47127 12.3051 3.39881 12.4994 3.3988C12.6938 3.3988 12.8812 3.47124 13.025 3.60199L20.838 10.705C20.9186 10.7782 20.9829 10.8675 21.027 10.967C21.071 11.0666 21.0938 11.1742 21.0938 11.2831V20.3124C21.0938 20.415 21.0735 20.5166 21.0343 20.6114C20.995 20.7062 20.9374 20.7923 20.8649 20.8649C20.7923 20.9374 20.7062 20.995 20.6114 21.0342C20.5166 21.0735 20.415 21.0937 20.3124 21.0937L15.6243 21.093C15.4171 21.093 15.2185 21.0107 15.072 20.8642C14.9255 20.7177 14.8432 20.519 14.8432 20.3118V20.3118Z"
        stroke="#849299"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
        className={className}
      /> */}
      <path
        d="M14.8167 19.6935H15.6333C16.975 19.6935 18.0717 18.5968 18.0717 17.2551V16.4385H14.8167V19.6935Z"
        fill="#1B43C6"
      />
      <path
        d="M9.92834 17.2551C9.92834 18.5968 11.025 19.6935 12.3667 19.6935H13.1833V16.4385H9.92834V17.2551Z"
        fill="#1B43C6"
      />
      <path
        d="M9.92834 13.9999V14.8165H13.1833V11.5615H12.3667C11.025 11.5615 9.92834 12.6582 9.92834 13.9999Z"
        fill="#1B43C6"
      />
      <path
        d="M23.3683 7.95663L16.66 3.25497C14.8283 1.97163 12.0283 2.04163 10.2666 3.40663L4.42165 7.9683C3.24331 8.8783 2.33331 10.745 2.33331 12.215V20.265C2.33331 23.24 4.74831 25.6666 7.71165 25.6666H20.2766C23.24 25.6666 25.655 23.2516 25.655 20.2766V12.3666C25.6666 10.7916 24.6516 8.85497 23.3683 7.95663ZM19.6933 17.255C19.6933 19.495 17.8616 21.3266 15.6216 21.3266H12.3666C10.1266 21.3266 8.29498 19.5066 8.29498 17.255V14C8.29498 11.76 10.1266 9.9283 12.3666 9.9283H15.6216C17.8616 9.9283 19.6933 11.7483 19.6933 14V17.255Z"
        fill="#1B43C6"
      />
      <path
        d="M15.6333 11.5615H14.8167V14.8165H18.0717V13.9999C18.0717 12.6582 16.975 11.5615 15.6333 11.5615Z"
        fill="#1B43C6"
      />
    </svg>
  );
};

const UsersIcon = ({ className }: any) => {
  return (
    <svg
      width="25"
      height="25"
      viewBox="0 0 25 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path
        d="M8.59375 15.625C11.3983 15.625 13.6719 13.3514 13.6719 10.5469C13.6719 7.7423 11.3983 5.46875 8.59375 5.46875C5.78918 5.46875 3.51562 7.7423 3.51562 10.5469C3.51562 13.3514 5.78918 15.625 8.59375 15.625Z"
        stroke="#849299"
        stroke-width="1.5"
        stroke-miterlimit="10"
        className={className}
      />
      <path
        d="M15.177 5.65785C15.8755 5.46106 16.608 5.41623 17.3252 5.52638C18.0425 5.63653 18.7278 5.8991 19.335 6.29641C19.9422 6.69372 20.4572 7.21653 20.8454 7.82965C21.2335 8.44276 21.4858 9.13194 21.5852 9.85075C21.6845 10.5696 21.6287 11.3013 21.4215 11.9968C21.2142 12.6922 20.8603 13.3351 20.3837 13.8823C19.907 14.4294 19.3187 14.8681 18.6582 15.1687C17.9977 15.4693 17.2805 15.6249 16.5549 15.6249"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
      <path
        d="M1.56201 19.277C2.35511 18.1489 3.408 17.2282 4.63179 16.5925C5.85557 15.9569 7.21433 15.6251 8.59334 15.625C9.97236 15.6249 11.3311 15.9567 12.555 16.5922C13.7788 17.2278 14.8318 18.1484 15.625 19.2765"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
      <path
        d="M16.5549 15.625C17.9341 15.624 19.2931 15.9553 20.5171 16.591C21.741 17.2266 22.7938 18.1477 23.5862 19.2765"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
    </svg>
  );
};

const ProgramsIcon = ({ className }: any) => {
  return (
    <svg
      className={className}
      width="24"
      height="25"
      viewBox="0 0 24 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M20.3333 20H3.69231C3.50886 19.9995 3.33308 19.9264 3.20337 19.7966C3.07365 19.6669 3.00054 19.4911 3 19.3077V8H20.25C20.4489 8 20.6397 8.07902 20.7803 8.21967C20.921 8.36032 21 8.55109 21 8.75V19.3333C21 19.5101 20.9298 19.6797 20.8047 19.8047C20.6797 19.9298 20.5101 20 20.3333 20V20Z"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
      <path
        d="M3 8V5.75C3 5.55109 3.07902 5.36032 3.21967 5.21967C3.36032 5.07902 3.55109 5 3.75 5H8.68934C8.78783 5 8.88536 5.0194 8.97635 5.05709C9.06735 5.09478 9.15003 5.15003 9.21967 5.21967L12 8"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
    </svg>
  );
};

const ProjectIcon = ({ className }: any) => {
  return (
    <svg
      width="24"
      height="25"
      viewBox="0 0 24 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path
        d="M12 12.5V3.5"
        stroke="#849299"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
        className={className}
      />
      <path
        d="M19.7943 8L4.20581 17"
        stroke="#849299"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
        className={className}
      />
      <path
        d="M3.15008 14.1455C2.76041 12.0367 3.13532 9.85809 4.20749 8.00085C5.27966 6.14361 6.97883 4.72945 8.99988 4.01233V10.7681L3.15008 14.1455Z"
        stroke="#849299"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
        className={className}
      />
      <path
        d="M12 3.5C13.5768 3.50029 15.1258 3.91485 16.492 4.70216C17.8582 5.48947 18.9936 6.6219 19.7844 7.98605C20.5753 9.3502 20.9939 10.8982 20.9983 12.475C21.0026 14.0518 20.5927 15.6021 19.8094 16.9706C19.0261 18.3391 17.8971 19.4779 16.5353 20.2728C15.1735 21.0676 13.6267 21.4908 12.05 21.4999C10.4732 21.5089 8.92167 21.1035 7.55083 20.3243C6.18 19.5451 5.03793 18.4194 4.23901 17.06"
        stroke="#849299"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
        className={className}
      />
    </svg>
  );
};

const TasksIcon = ({ className }: any) => {
  return (
    <svg
      width="24"
      height="25"
      viewBox="0 0 24 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path
        d="M9.375 14.8438H15.625"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
      <path
        d="M9.375 11.7188H15.625"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
      <path
        d="M15.6252 3.90625H19.5312C19.7385 3.90625 19.9372 3.98856 20.0837 4.13507C20.2302 4.28159 20.3125 4.4803 20.3125 4.6875V21.0938C20.3125 21.301 20.2302 21.4997 20.0837 21.6462C19.9372 21.7927 19.7385 21.875 19.5312 21.875H5.46875C5.26155 21.875 5.06284 21.7927 4.91632 21.6462C4.76981 21.4997 4.6875 21.301 4.6875 21.0938V4.6875C4.6875 4.4803 4.76981 4.28159 4.91632 4.13507C5.06284 3.98856 5.26155 3.90625 5.46875 3.90625H9.37479"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
      <path
        d="M8.59375 7.03125V6.25C8.59375 5.214 9.0053 4.22043 9.73786 3.48786C10.4704 2.7553 11.464 2.34375 12.5 2.34375C13.536 2.34375 14.5296 2.7553 15.2621 3.48786C15.9947 4.22043 16.4062 5.214 16.4062 6.25V7.03125H8.59375Z"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
    </svg>
  );
};

const SettingsIcon = ({ className }: any) => {
  return (
    <svg
      width="25"
      height="25"
      viewBox="0 0 25 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path
        d="M12.5 17.1875C15.0888 17.1875 17.1875 15.0888 17.1875 12.5C17.1875 9.91117 15.0888 7.8125 12.5 7.8125C9.91117 7.8125 7.8125 9.91117 7.8125 12.5C7.8125 15.0888 9.91117 17.1875 12.5 17.1875Z"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
      <path
        d="M11.9992 4.31192L10.1565 2.93029C10.0576 2.85591 9.94247 2.80609 9.82057 2.78495C9.69867 2.7638 9.57349 2.77192 9.45535 2.80864C8.88464 2.98736 8.33094 3.21645 7.8008 3.4932C7.69105 3.55076 7.59657 3.6336 7.52515 3.73488C7.45373 3.83615 7.40742 3.95296 7.39004 4.07566L7.06429 6.35602C6.94012 6.46609 6.81855 6.58057 6.69959 6.69946C6.58067 6.81838 6.46617 6.93998 6.35607 7.06425L6.35602 7.06429L4.07606 7.39033C3.95356 7.40765 3.83693 7.45383 3.73578 7.52507C3.63463 7.59632 3.55185 7.69058 3.49428 7.80009C3.2171 8.33001 2.98757 8.88352 2.80839 9.45408C2.77149 9.57239 2.76326 9.69777 2.78437 9.81989C2.80548 9.942 2.85533 10.0573 2.9298 10.1564L4.31192 11.9992C4.30195 12.1648 4.29694 12.3317 4.29689 12.4999C4.29689 12.6681 4.3019 12.835 4.31193 13.0008L4.31192 13.0008L2.93029 14.8436C2.85591 14.9424 2.80609 15.0575 2.78495 15.1794C2.7638 15.3014 2.77192 15.4265 2.80864 15.5447C2.98736 16.1154 3.21645 16.6691 3.4932 17.1992C3.55076 17.309 3.6336 17.4035 3.73488 17.4749C3.83615 17.5463 3.95296 17.5926 4.07566 17.61L6.35602 17.9357C6.46609 18.0599 6.58057 18.1815 6.69946 18.3004C6.81838 18.4194 6.93997 18.5339 7.06424 18.6439L7.06428 18.644L7.39032 20.924C7.40764 21.0465 7.45383 21.1631 7.52507 21.2642C7.59631 21.3654 7.69057 21.4482 7.80008 21.5057C8.33 21.7829 8.88351 22.0125 9.45408 22.1916C9.57238 22.2285 9.69777 22.2368 9.81988 22.2157C9.942 22.1945 10.0573 22.1447 10.1564 22.0702L11.9992 20.6881C12.1648 20.6981 12.3317 20.7031 12.4999 20.7031C12.6681 20.7031 12.835 20.6981 13.0008 20.6881L13.0008 20.6881L14.8436 22.0697C14.9424 22.1441 15.0575 22.1939 15.1794 22.2151C15.3014 22.2362 15.4265 22.2281 15.5447 22.1914C16.1154 22.0127 16.6691 21.7836 17.1992 21.5068C17.309 21.4493 17.4035 21.3664 17.4749 21.2651C17.5463 21.1639 17.5926 21.0471 17.61 20.9244L17.9357 18.644C18.0599 18.5339 18.1815 18.4195 18.3004 18.3006C18.4194 18.1816 18.5339 18.0601 18.6439 17.9358L18.644 17.9357L20.924 17.6097C21.0465 17.5924 21.1631 17.5462 21.2642 17.475C21.3654 17.4037 21.4482 17.3095 21.5057 17.1999C21.7829 16.67 22.0125 16.1165 22.1916 15.5459C22.2285 15.4276 22.2368 15.3023 22.2157 15.1801C22.1945 15.058 22.1447 14.9427 22.0702 14.8436L20.6881 13.0008C20.6981 12.8352 20.7031 12.6683 20.7031 12.5001C20.7031 12.3319 20.6981 12.165 20.6881 11.9993L20.6881 11.9992L22.0697 10.1565C22.1441 10.0576 22.1939 9.94247 22.2151 9.82057C22.2362 9.69867 22.2281 9.57349 22.1914 9.45535C22.0127 8.88464 21.7836 8.33094 21.5068 7.8008C21.4493 7.69105 21.3664 7.59657 21.2651 7.52515C21.1639 7.45373 21.0471 7.40742 20.9244 7.39004L18.644 7.06429C18.5339 6.94012 18.4195 6.81855 18.3006 6.69959C18.1816 6.58067 18.0601 6.46617 17.9358 6.35607L17.9357 6.35602L17.6097 4.07606C17.5924 3.95356 17.5462 3.83693 17.475 3.73578C17.4037 3.63463 17.3095 3.55185 17.1999 3.49428C16.67 3.2171 16.1165 2.98757 15.5459 2.80839C15.4276 2.77149 15.3023 2.76326 15.1801 2.78437C15.058 2.80548 14.9427 2.85533 14.8436 2.9298L13.0008 4.31192C12.8352 4.30195 12.6683 4.29694 12.5001 4.29689C12.3319 4.29689 12.165 4.3019 11.9993 4.31193L11.9992 4.31192Z"
        stroke="#849299"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
        className={className}
      />
    </svg>
  );
};

const LogoutIcon = ({ className }: any) => {
  return (
    <svg
      width="25"
      height="25"
      viewBox="0 0 25 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M9.375 12.5C9.375 12.7072 9.45731 12.9059 9.60382 13.0524C9.75034 13.1989 9.94905 13.2812 10.1562 13.2812H19.2078L15.8531 16.6344C15.7064 16.7811 15.624 16.98 15.624 17.1875C15.624 17.395 15.7064 17.5939 15.8531 17.7406C15.9998 17.8873 16.1988 17.9697 16.4062 17.9697C16.6137 17.9697 16.8127 17.8873 16.9594 17.7406L21.6469 13.0531C21.7196 12.9806 21.7774 12.8943 21.8167 12.7994C21.8561 12.7045 21.8764 12.6028 21.8764 12.5C21.8764 12.3972 21.8561 12.2955 21.8167 12.2006C21.7774 12.1057 21.7196 12.0194 21.6469 11.9469L16.9594 7.25937C16.8127 7.11268 16.6137 7.03026 16.4062 7.03026C16.1988 7.03026 15.9998 7.11268 15.8531 7.25937C15.7064 7.40607 15.624 7.60504 15.624 7.8125C15.624 8.01996 15.7064 8.21893 15.8531 8.36563L19.2078 11.7188H10.1562C9.94905 11.7188 9.75034 11.8011 9.60382 11.9476C9.45731 12.0941 9.375 12.2928 9.375 12.5ZM5.46875 23.4375C5.26155 23.4375 5.06284 23.3552 4.91632 23.2087C4.76981 23.0622 4.6875 22.8635 4.6875 22.6562V2.34375C4.6875 2.13655 4.76981 1.93784 4.91632 1.79132C5.06284 1.64481 5.26155 1.5625 5.46875 1.5625C5.67595 1.5625 5.87466 1.64481 6.02118 1.79132C6.16769 1.93784 6.25 2.13655 6.25 2.34375V22.6562C6.25 22.8635 6.16769 23.0622 6.02118 23.2087C5.87466 23.3552 5.67595 23.4375 5.46875 23.4375Z"
        fill="#849299"
        className={className}
      />
    </svg>
  );
};

export const links: Link[] = [
  {
    id: 1,
    text: "Dashboard",
    icon: (
      <DashboardIcon className="group-hover:fill-primary group-hover:stroke-primary" />
    ),
    url: "/dashboard",
  },
  {
    id: 2,
    text: "Users",
    icon: (
      <UsersIcon className="group-hover:fill-primary group-hover:stroke-primary" />
    ),
    url: "/dashboard",
  },
  {
    id: 3,
    text: "Programs",
    icon: (
      <ProgramsIcon className="group-hover:fill-primary group-hover:stroke-primary" />
    ),
    url: "/dashboard",
  },
  {
    id: 4,
    text: "Project",
    icon: <ProjectIcon className="group-hover:stroke-primary" />,
    url: "/dashboard",
  },
  {
    id: 5,
    text: "Tasks",
    icon: <TasksIcon className="group-hover:stroke-primary" />,
    url: "/dashboard",
  },
  {
    id: 6,
    text: "Setting",
    icon: <SettingsIcon className="group-hover:stroke-primary" />,
    url: "/dashboard",
  },
  {
    id: 7,
    text: "Logout",
    icon: (
      <LogoutIcon className="group-hover:fill-primary group-hover:stroke-primary" />
    ),
    url: "/dashboard",
  },
];

const SideNavLinks = () => {
  return (
    <ul>
      {links?.map((link) => (
        <RouterLink key={link?.id} to={link?.url}>
          <div className="w-full px-4">
            <div className="flex items-center gap-4 group hover:bg-[#1B43C61A] py-4 px-4 rounded-full">
              {link?.icon}
              <p className="group-hover:text-secondary text-darkgrey group-hover:font-semibold text-md font-nunito">
                {link?.text}
              </p>
            </div>
          </div>
        </RouterLink>
      ))}
    </ul>
  );
};

export default SideNavLinks;
